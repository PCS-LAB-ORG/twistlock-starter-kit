---

- name: Install prerequisites
  yum:
     name: '{{ item }}'
     state: present
  with_items:
           - yum-utils
           - device-mapper-persistent-data
           - lvm2
  tags: prereqs

- name: Add Docker CE Repo
  shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  tags: prereqs

#        - name: Add Docker CE  Repo
#          yum_repository:
#               name: docker-ce
#               description: Docker Community Edition
#               baseurl: https://download.docker.com/linux/centos/docker-ce.repo
#          tags: prereqs_repo 

- name: Install Docker
  yum:
      name: docker-ce
      state: present
  tags: prereqs
  ignore_errors: yes

- name: Start Docker
  service:
     name: docker
     state: started
  tags: service

#
# In case there's another deployment on the server, clear it out
- name: Clear out previous deployment
  shell: sudo docker ps -aq | sudo xargs docker stop | sudo xargs docker rm
  ignore_errors: yes
  tags: clear

- name: Create deployment folder
  file:
    path: /home/{{ user }}/twistlock-{{ build }}
    state: directory
    owner: "{{ user }}"
    group: "{{ user_group }}"
    mode: '0755'
  tags: prereqs_twistlock

- name: Retrieve Twistlock Installer
  get_url:
      #url: https://cdn.twistlock.com/releases/KuEOazGL/prisma_cloud_compute_edition_21_08_529.tar.gz
      url: '{{ upgrade_version }}'
      dest: /home/{{ user }}/
  tags: download

- name: Install Twistlock | Set permissions
  file:
     #path: /home/{{ user }}/prisma_cloud_compute_edition_21_08_529.tar.gz
     path: /home/{{ user }}/prisma_cloud_compute_edition_22_12_415.tar.gz
     owner: "{{ user }}"
     group: "{{ user_group }}"
 

- name: Stage Twistlock Installer {{ version }} | {{ build }}
  remote_user: "{{ user }}"
  unarchive:
#        src: ./prisma_cloud_compute_edition_{{ version }}.tar.gz
#        src: /home/{{ user }}/prisma_cloud_compute_edition_21_08_529.tar.gz
        src: /home/{{ user }}/prisma_cloud_compute_edition_22_12_415.tar.gz       
        dest: /home/{{ user }}/twistlock-{{ build }}
        remote_src: yes
  tags: install_console
   
#        - name: Install Twistlock | Set permissions
#          file:
#             path: /home/{{ user }}/twistlock
#             state: directory
#             owner: "{{ user }}"
    

- name: Install Twistlock       
  shell: /home/{{ user }}/twistlock-{{ build }}/twistlock.sh -s onebox
  tags: install_console
  register: twistlock_install

- name: Twistlock install output
  debug:
     msg: twistlock_install
  tags: install_console


# Create the first administrator account from the supplied variables
- name: Create admin user
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v1/signup"
    method: POST
    body: {"username": "{{ admin_user }}", "password": "{{ admin_password | urlencode }}"}
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: admin_user

# Create a service account for image scanning (twistcli)
- name: Create CI service account
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v1/signup"
    method: POST
    body: {"username": "{{ ci_user }}", "password": "{{ ci_password | urlencode }}"}
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: ci_user


# License the Console
- name: License the Console
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/settings/license"
    url: "https://{{ twistlock_console }}:8083/api/v1/settings/license"
    method: POST
    user: "{{ admin_user }}"
    password: "{{ admin_password }}"
    body: { "key": "{{ twistlock_license }}"}
    force_basic_auth: yes
    body_format: json
    validate_certs: no
    status_code: 200,400
  tags: license

- name: Configure firewall 1/2
  firewalld:
       port: "{{ item }}"
       permanent: yes
       state: enabled
  with_items:
          - 8083/tcp
          - 8084/tcp
  tags: firewall

- name: Configure firewall 2/2
  systemd:
       name: firewalld
       state: reloaded
  tags: firewall



