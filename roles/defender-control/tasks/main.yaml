---

# Not necessary. Variable does not persist once this task completes
#- include_tasks: admin_login.yml
#  tags: 
#    - always
#
#- name: Download Twistcli
#  get_url:
#    url: "http://{{ twistlock_console }}:8083/api/v22.06/util/twistcli"
#    url_username: "{{ admin_user }}"
#    url_password: "{{ admin_password | urlencode }}"
#    dest: /home/jjeanclaude/twistcli
#    force_basic_auth: yes
#    validate_certs: no
#  tags: twistcli

- name: Download Twistcli
  remote_user: jjeanclaude
  shell: |
    curl --insecure -u admin -X GET -o /home/jjeanclaude/twistcli 'https://{{ twistlock_console }}:8083/api/v22.06/util/twistcli'

    expect "Enter host password for user 'admin':"
    send "{{ admin_password | urlencode }}\n"
    exit 0
  tags: twistcli

- name: < Fetch file that requires authentication.
        username/password only available since 2.8, in older versions you need to use url_username/url_password
  get_url:
    url: http://example.com/path/file.conf
    dest: /etc/foo.conf
    username: bar
    password: '{{ mysecret }}'

- name: Deploy Linux Defender 1/2
  uri:
    url: "https://{{ twistlock_console }}:8083/api/v1/scripts/defender.sh"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: POST
    headers:
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: deploy_linux
  register: host_linux

#- name: Deploy Linux Defender
#  shell: 
     #curl -sSL -k --header "authorization: Bearer {{ API_token }}" -X POST https://{{ twistlock_console }}:8083/api/v1/scripts/defender.sh
     #sudo bash -s -- -c "{{ twistlock_console }}" -d "none"  -m  --install-host
#    cmd: 'curl -sSL -k --header "authorization: Bearer {{ API_token }}" -X POST https://{{ twistlock_console }}:8083/api/v1/scripts/defender.sh  | sudo bash -s -- -c "{{ twistlock_console }}" -d "none"  -m  --install-host'
#  tags: deploy_linux
#  register: host_linux

- name: Deploy Linux Defender 2/2
  shell: defender.sh -c "{{ twistlock_console }}" -d "none" -m --install-host
  tags: deploy_linux
  register: host_linux2

- name: Confirm defender deployment
  debug:
     msg: 
       - "{{ host_linux }}"
       - "{{ host_linux2 }}"
  tags: deploy_linux


- name: List defenders
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v22.06/defenders"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: GET
#    body: {"username": "{{ splunk_user }}", "password": "{{ splunk_password | urlencode }}", "role":"operator", "authType":"basic"}
    headers:
#      Cookie: "{{ login.set_cookie }}"
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: defender_list
  register: list_of_defenders

- name: Show defenders
  debug:
     msg: "{{ list_of_defenders }}"
  tags: defender_list

- name: List defender names
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v22.06/defenders/names"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: GET
#    body: {"username": "{{ splunk_user }}", "password": "{{ splunk_password | urlencode }}", "role":"operator", "authType":"basic"}
    headers:
#      Cookie: "{{ login.set_cookie }}"
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: defender_names
  register: list_defender_names

- name: Defenders Summary
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v22.06/defenders/summary"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: GET
    headers:
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: defender_summary
  register: summary_of_defenders

- name: Defender Restart
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v22.06/defenders/<< hostname >>/restart"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: POST
    headers:
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: defender_restart

- name: Upgrade all Linux Defenders | {{ version }}
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v22.06/defenders/upgrade"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: POST
    headers:
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: defender_upgrade

- name: Upgrade Single Linux Defender | {{ version }}
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v22.12/defenders/<< hostname >>/upgrade"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: POST
    headers:
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: defender_upgrade_single


- name: Authenticate as Admin
  uri:
    url: "https://{{ twistlock_console }}:8083/api/v22.12/authenticate"
    method: POST
    body: {"username": "{{ admin_user }}", "password": "{{ admin_password | urlencode }}"}
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: admin_user_login
  register: API_token

- name: Show bearer token
  debug:
      msg: "{{ API_token }}"
  tags: admin_user_login


- name: Delete a defender
  uri:
    #url: "https://{{ twistlock_console.stdout }}:8083/api/v1/signup"
    url: "https://{{ twistlock_console }}:8083/api/v22.06/defenders/<< defender hostname >>"
    url_username: "{{ admin_user }}"
    url_password: "{{ admin_password | urlencode }}"
    method: DELETE
#    body: {"username": "{{ splunk_user }}", "password": "{{ splunk_password | urlencode }}", "role":"operator", "authType":"basic"}
    headers:
#      Cookie: "{{ login.set_cookie }}"
      authorization: Bearer {{ API_token }}      
    force_basic_auth: no
    body_format: json
    validate_certs: no
    status_code: 200,400 # We are ignoring errors here in case this task is being run again & user already exists
  tags: remove_defender






